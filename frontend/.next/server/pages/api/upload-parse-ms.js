"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/upload-parse-ms";
exports.ids = ["pages/api/upload-parse-ms"];
exports.modules = {

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "node-tesseract-ocr":
/*!*************************************!*\
  !*** external "node-tesseract-ocr" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("node-tesseract-ocr");

/***/ }),

/***/ "formidable":
/*!*****************************!*\
  !*** external "formidable" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("formidable");;

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-parse-ms&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fupload-parse-ms.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-parse-ms&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fupload-parse-ms.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _src_pages_api_upload_parse_ms_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/pages/api/upload-parse-ms.ts */ \"(api)/./src/pages/api/upload-parse-ms.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_src_pages_api_upload_parse_ms_ts__WEBPACK_IMPORTED_MODULE_3__]);\n_src_pages_api_upload_parse_ms_ts__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_upload_parse_ms_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_src_pages_api_upload_parse_ms_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/upload-parse-ms\",\n        pathname: \"/api/upload-parse-ms\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _src_pages_api_upload_parse_ms_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnVwbG9hZC1wYXJzZS1tcyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnNyYyUyRnBhZ2VzJTJGYXBpJTJGdXBsb2FkLXBhcnNlLW1zLnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQytEO0FBQy9EO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw4REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsOERBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVELHFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZW1hdGgtZnJvbnRlbmQvP2U0NTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3NyYy9wYWdlcy9hcGkvdXBsb2FkLXBhcnNlLW1zLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdXBsb2FkLXBhcnNlLW1zXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdXBsb2FkLXBhcnNlLW1zXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-parse-ms&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fupload-parse-ms.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./src/pages/api/upload-parse-ms.ts":
/*!******************************************!*\
  !*** ./src/pages/api/upload-parse-ms.ts ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var formidable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! formidable */ \"formidable\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! child_process */ \"child_process\");\n/* harmony import */ var child_process__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(child_process__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var node_tesseract_ocr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! node-tesseract-ocr */ \"node-tesseract-ocr\");\n/* harmony import */ var node_tesseract_ocr__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(node_tesseract_ocr__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([formidable__WEBPACK_IMPORTED_MODULE_0__]);\nformidable__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n\n\n// If true, use mock/page_x.json instead of calling Python for parsing\nconst MOCK_MODE = false;\nconst config = {\n    api: {\n        bodyParser: false\n    }\n};\nasync function handler(req, res) {\n    let responded = false;\n    if (req.method !== \"POST\") {\n        res.setHeader(\"Allow\", [\n            \"POST\"\n        ]);\n        responded = true;\n        return res.status(405).json({\n            error: `Method ${req.method} Not Allowed`\n        });\n    }\n    const form = new formidable__WEBPACK_IMPORTED_MODULE_0__.IncomingForm({\n        keepExtensions: true\n    });\n    form.parse(req, async (err, fields, files)=>{\n        console.log(\"\\uD83D\\uDCE8 Entered form.parse\");\n        if (err) {\n            responded = true;\n            return res.status(500).json({\n                error: \"Failed to parse form data.\"\n            });\n        }\n        const file = files.pdf?.[0] || files.pdf;\n        console.log(\"\\uD83D\\uDCE6 Uploaded file:\", file);\n        if (!file || Array.isArray(file)) {\n            responded = true;\n            return res.status(400).json({\n                error: \"No file uploaded.\"\n            });\n        }\n        console.log(\"\\uD83D\\uDCE5 File received\", file.filepath);\n        try {\n            const imageDir = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"tmp/markscheme_pages\");\n            fs__WEBPACK_IMPORTED_MODULE_1___default().mkdirSync(imageDir, {\n                recursive: true\n            });\n            // 🧠 调用 detect_tables_in_pdf.py，提前识别评分页\n            console.log(\"\\uD83D\\uDC0D Running detect_tables_in_pdf.py:\", [\n                \"python3\",\n                path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"../backend/scripts/detect_tables_in_pdf.py\"),\n                file.filepath\n            ]);\n            const detectProcess = (0,child_process__WEBPACK_IMPORTED_MODULE_3__.spawn)(\"python3\", [\n                path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"../backend/scripts/detect_tables_in_pdf.py\"),\n                file.filepath\n            ]);\n            await new Promise((resolve, reject)=>{\n                detectProcess.on(\"close\", (code)=>{\n                    if (code !== 0) {\n                        console.error(\"❌ Table detection failed with code\", code);\n                        reject(new Error(\"Table detection failed\"));\n                    } else {\n                        console.log(\"✅ Table detection finished successfully\");\n                        resolve(null);\n                    }\n                });\n            });\n            const convertProcess = (0,child_process__WEBPACK_IMPORTED_MODULE_3__.spawn)(\"python3\", [\n                path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"../backend/scripts/convert_ms_to_images.py\"),\n                file.filepath,\n                imageDir\n            ]);\n            await new Promise((resolve, reject)=>{\n                convertProcess.on(\"close\", (code)=>{\n                    if (code !== 0) reject(new Error(\"Image conversion failed\"));\n                    else resolve(null);\n                });\n            });\n            // Read all images in imageDir sorted by page number\n            const imageFiles = fs__WEBPACK_IMPORTED_MODULE_1___default().readdirSync(imageDir).filter((f)=>/\\.(png|jpe?g|bmp|tiff?|webp)$/i.test(f)).sort((a, b)=>{\n                const numA = parseInt(a.match(/\\d+/)?.[0] || \"0\", 10);\n                const numB = parseInt(b.match(/\\d+/)?.[0] || \"0\", 10);\n                return numA - numB;\n            });\n            const pagesWithTablesPath = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"tmp/pages_with_tables.json\");\n            let pagesStatus = [];\n            if (fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(pagesWithTablesPath)) {\n                const data = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(pagesWithTablesPath, \"utf8\");\n                const parsed = JSON.parse(data);\n                pagesStatus = parsed.pages || [];\n            } else {\n                console.warn(\"⚠️ pages_with_tables.json not found. Defaulting to process all pages.\");\n            }\n            const marks = [];\n            let noteBuffer = \"\";\n            let lastMarks = [];\n            // Image hash cache: Set of hashes seen so far\n            const seenHashes = new Set();\n            // For reuse: last result from previous image\n            let lastResult = null;\n            let seenFirstHeader = false;\n            try {\n                for(let i = 0; i < imageFiles.length; ++i){\n                    const pageIndex = i + 1;\n                    const pageStatus = pagesStatus.find((p)=>p.page === pageIndex);\n                    if (!pageStatus || !pageStatus.has_table) {\n                        console.log(`⛔ Skipping Page ${pageIndex} (no table)`);\n                        lastResult = null;\n                        continue;\n                    }\n                    const imgFile = imageFiles[i];\n                    const imgPath = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(imageDir, imgFile);\n                    // Compute hash for the image\n                    const imgBuffer = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(imgPath);\n                    const imgHash = crypto__WEBPACK_IMPORTED_MODULE_4___default().createHash(\"sha256\").update(imgBuffer).digest(\"hex\");\n                    console.log(`📄 Page ${pageIndex}: hash = ${imgHash}`);\n                    let jsonOutput = null;\n                    if (seenHashes.has(imgHash)) {\n                        // Reuse last result if hash seen before\n                        console.log(`🔁 Page ${pageIndex}: skipped due to hash match`);\n                        jsonOutput = lastResult;\n                    } else {\n                        seenHashes.add(imgHash);\n                        if (!pageStatus.has_header && seenFirstHeader) {\n                            console.log(`📝 Page ${pageIndex}: treated as Notes (table w/o header, after scoring begins)`);\n                            const ocrText = await node_tesseract_ocr__WEBPACK_IMPORTED_MODULE_5___default().recognize(imgPath);\n                            noteBuffer += (noteBuffer ? \"\\n\" : \"\") + ocrText;\n                            lastResult = null;\n                            continue;\n                        }\n                        if (!pageStatus.has_header && !seenFirstHeader) {\n                            console.log(`📄 Page ${pageIndex}: skipped (table w/o header, before scoring)`);\n                            lastResult = null;\n                            continue;\n                        }\n                        seenFirstHeader = true;\n                        // ✅ 此时仅当 hasHeader === true 才会调用 GPT\n                        if (MOCK_MODE) {\n                            // Load mock/page_x.json (x = i+1)\n                            const mockPath = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), `mock/page_${pageIndex}.json`);\n                            if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(mockPath)) {\n                                throw new Error(`Mock file not found: ${mockPath}`);\n                            }\n                            const mockData = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(mockPath, \"utf8\");\n                            jsonOutput = JSON.parse(mockData);\n                        } else {\n                            console.log(`📨 Sending image to GPT via parse_markscheme.py: ${imgFile}`);\n                            console.log(\"\\uD83E\\uDDE0 Spawning parse_markscheme.py for\", imgFile);\n                            // Call Python script as before\n                            const parseProcess = (0,child_process__WEBPACK_IMPORTED_MODULE_3__.spawn)(\"python3\", [\n                                path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"../backend/scripts/parse_markscheme.py\"),\n                                imgPath\n                            ]);\n                            let stdoutData = \"\";\n                            let stderrData = \"\";\n                            await new Promise((resolve, reject)=>{\n                                parseProcess.stdout.on(\"data\", (data)=>{\n                                    stdoutData += data.toString();\n                                });\n                                parseProcess.stderr.on(\"data\", (data)=>{\n                                    stderrData += data.toString();\n                                    console.log(`🐍 stderr: ${data.toString()}`);\n                                });\n                                parseProcess.on(\"close\", (code)=>{\n                                    console.log(`✅ Python exited with code ${code}`);\n                                    if (code !== 0) {\n                                        reject(new Error(`parse_page.py failed on ${imgFile}: ${stderrData}`));\n                                    } else {\n                                        try {\n                                            console.log(`📤 Raw JSON from Python for page ${pageIndex}: ${stdoutData.slice(0, 200)}...`);\n                                            jsonOutput = JSON.parse(stdoutData);\n                                            resolve();\n                                        } catch (err) {\n                                            const error = err;\n                                            responded = true;\n                                            return res.status(500).json({\n                                                error: \"Failed to parse pages.\",\n                                                detail: error.message\n                                            });\n                                        }\n                                    }\n                                });\n                            });\n                        }\n                        lastResult = jsonOutput;\n                    }\n                    // Now process jsonOutput as before\n                    if (!jsonOutput || !jsonOutput.header) {\n                        // No header means this page is explanation content\n                        if (jsonOutput?.explanation) {\n                            noteBuffer += (noteBuffer ? \"\\n\" : \"\") + jsonOutput.explanation;\n                        }\n                        continue;\n                    }\n                    if (Array.isArray(jsonOutput.marks) && jsonOutput.marks.length > 0) {\n                        // 拆分 notes 按评分点标识，合并到 marks\n                        if (noteBuffer) {\n                            const noteLines = noteBuffer.split(/\\n/).map((line)=>line.trim()).filter(Boolean);\n                            const noteChunks = [];\n                            // 组装每个评分点段落（支持多行合并）\n                            for (const line of noteLines){\n                                const markStart = /^(\\(?[a-z]+\\)?\\(?[a-z]+\\)?\\s*)?(m1|a1\\*?|b1(ft)?|d?m\\d?)[:：]/i;\n                                if (noteChunks.length === 0 || markStart.test(line)) {\n                                    noteChunks.push(line);\n                                } else {\n                                    noteChunks[noteChunks.length - 1] += \" \" + line;\n                                }\n                            }\n                            // 建立评分点查找索引\n                            const markIndex = new Map();\n                            for (const mark of jsonOutput.marks){\n                                const markKey = (mark.label + (mark.mark_code || \"\")).toLowerCase().replace(/[\\s()]/g, \"\");\n                                markIndex.set(markKey, mark);\n                            }\n                            // 按标识查找并赋值\n                            for (const chunk of noteChunks){\n                                const match = chunk.match(/^(\\(?[a-z]+\\)?\\(?[a-z]+\\)?\\s*)?(m1|a1\\*?|b1(ft)?|d?m\\d?)[:：]/i);\n                                if (!match) continue;\n                                const labelRaw = (match[1] || \"\").trim();\n                                const markCodeRaw = (match[2] || \"\").toUpperCase();\n                                const label = labelRaw.replace(/\\s+/g, \"\");\n                                const markKey = (label + markCodeRaw).toLowerCase().replace(/[\\s()]/g, \"\");\n                                const mark = markIndex.get(markKey);\n                                if (mark) {\n                                    if (!mark.explanation) mark.explanation = \"\";\n                                    mark.explanation += (mark.explanation ? \"\\n\" : \"\") + chunk;\n                                }\n                            }\n                            noteBuffer = \"\";\n                        }\n                        marks.push(...jsonOutput.marks);\n                        console.log(`✅ Page ${pageIndex}: ${jsonOutput.marks.length} marks added`);\n                        console.log(`📬 Received ${jsonOutput.marks.length} marks from GPT for page ${pageIndex}`);\n                        lastMarks = jsonOutput.marks;\n                    }\n                }\n                // Ensure each mark has an 'explanation' property\n                for (const mark of marks){\n                    if (!(\"explanation\" in mark)) {\n                        mark.explanation = \"\";\n                    }\n                }\n                // Write marks to tmp/output_marks.json before returning\n                const outputPath = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(process.cwd(), \"tmp/output_marks.json\");\n                fs__WEBPACK_IMPORTED_MODULE_1___default().writeFileSync(outputPath, JSON.stringify({\n                    marks\n                }, null, 2), \"utf8\");\n                console.log(`💾 Final output written to ${outputPath}`);\n                responded = true;\n                return res.status(200).json({\n                    marks\n                });\n            } catch (err) {\n                const error = err;\n                responded = true;\n                return res.status(500).json({\n                    error: \"Failed to parse pages.\",\n                    detail: error.message\n                });\n            }\n        } catch (e) {\n            responded = true;\n            return res.status(500).json({\n                error: \"Failed to process PDF.\",\n                detail: e?.message\n            });\n        }\n    });\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/upload-parse-ms.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fupload-parse-ms&preferredRegion=&absolutePagePath=.%2Fsrc%2Fpages%2Fapi%2Fupload-parse-ms.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();